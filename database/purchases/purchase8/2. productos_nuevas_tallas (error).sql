DO $do$ DECLARE v_product_barcode_id INTEGER; BEGIN /* Actualizar los costos y precios en product_details */ UPDATE product_details SET price = 69, offer_price = 49, invoice_currency = 'D', invoice_cost = 5.87, cost = 6.27, cost_currency = 'D', currency_cost = 'D' WHERE id = 6623; /* Actualizar la DS para los productos */ UPDATE products SET output_statement = '002648/16-Q5' WHERE id = 6623; /* Ingresar los códigos de barra */ INSERT INTO product_barcodes (size_id, old_barcode, product_detail_id) VALUES ( (SELECT size.id FROM size WHERE size.description = 'XL'), '888284699352', 6623 ) RETURNING id INTO v_product_barcode_id; /* Ingresar stock */ INSERT INTO stock (branch_id, product_barcode_id, store_stock, last_entry) VALUES ( 1, v_product_barcode_id, 6, NOW()::TIMESTAMP WITHOUT TIME ZONE ); END $do$ 
DO $do$ DECLARE v_product_barcode_id INTEGER; BEGIN /* Actualizar los costos y precios en product_details */ UPDATE product_details SET price = 69, offer_price = 49, invoice_currency = 'D', invoice_cost = 5.87, cost = 6.27, cost_currency = 'D', currency_cost = 'D' WHERE id = 6624; /* Actualizar la DS para los productos */ UPDATE products SET output_statement = '002648/16-Q5' WHERE id = 6624; /* Ingresar los códigos de barra */ INSERT INTO product_barcodes (size_id, old_barcode, product_detail_id) VALUES ( (SELECT size.id FROM size WHERE size.description = 'XL'), '888284860318', 6624 ) RETURNING id INTO v_product_barcode_id; /* Ingresar stock */ INSERT INTO stock (branch_id, product_barcode_id, store_stock, last_entry) VALUES ( 1, v_product_barcode_id, 6, NOW()::TIMESTAMP WITHOUT TIME ZONE ); END $do$ 
