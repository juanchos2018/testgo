{"version":3,"file":"simple-dom.js","sources":["../src/simple-dom/document/node.ts","../src/simple-dom/document/element.ts","../src/simple-dom/document/document-fragment.ts","../src/simple-dom/document/comment.ts","../src/simple-dom/document/raw-html-section.ts","../src/simple-dom/document/text.ts","../src/simple-dom/document.ts","../src/simple-dom/html-parser.ts","../src/simple-dom/html-serializer.ts","../src/simple-dom/void-map.ts"],"sourcesContent":["export const enum NodeType {\n  RAW = -1,\n  ELEMENT_NODE = 1,\n  ATTRIBUTE_NODE = 2,\n  TEXT_NODE = 3,\n  CDATA_SECTION_NODE = 4,\n  ENTITY_REFERENCE_NODE = 5,\n  ENTITY_NODE = 6,\n  PROCESSING_INSTRUCTION_NODE = 7,\n  COMMENT_NODE = 8,\n  DOCUMENT_NODE = 9,\n  DOCUMENT_TYPE_NODE = 10,\n  DOCUMENT_FRAGMENT_NODE = 11,\n  NOTATION_NODE = 12,\n}\n\nexport default class Node {\n  public static ELEMENT_NODE = NodeType.ELEMENT_NODE;\n  public static ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE;\n  public static TEXT_NODE = NodeType.TEXT_NODE;\n  public static CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE;\n  public static ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE;\n  public static ENTITY_NODE = NodeType.ENTITY_NODE;\n  public static PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE;\n  public static COMMENT_NODE = NodeType.COMMENT_NODE;\n  public static DOCUMENT_NODE = NodeType.DOCUMENT_NODE;\n  public static DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE;\n  public static DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE;\n  public static NOTATION_NODE = NodeType.NOTATION_NODE;\n\n  public parentNode: Node | null = null;\n  public previousSibling: Node | null = null;\n  public nextSibling: Node | null = null;\n  public firstChild: Node | null = null;\n  public lastChild: Node | null = null;\n\n  private _childNodes: ChildNodes | undefined = undefined;\n\n  constructor(public nodeType: NodeType, public nodeName: string, public nodeValue: string | null) {\n  }\n\n  public get childNodes(): {\n    item(index: number): Node | null;\n  } {\n    let children = this._childNodes;\n    if (children === undefined) {\n      children = this._childNodes = new ChildNodes(this);\n    }\n    return children;\n  }\n\n  public cloneNode(deep: true) {\n    const node = this._cloneNode();\n\n    if (deep) {\n      let child = this.firstChild;\n      let nextChild = child;\n\n      while (child !== null) {\n        nextChild = child.nextSibling;\n        node.appendChild(child.cloneNode(true));\n        child = nextChild;\n      }\n    }\n\n    return node;\n  }\n\n  public appendChild(node: Node) {\n    if (node.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\n      insertFragment(node, this, this.lastChild, null);\n      return node;\n    }\n\n    if (node.parentNode) { node.parentNode.removeChild(node); }\n\n    node.parentNode = this;\n    const refNode = this.lastChild;\n    if (refNode === null) {\n      this.firstChild = node;\n      this.lastChild = node;\n    } else {\n      node.previousSibling = refNode;\n      refNode.nextSibling = node;\n      this.lastChild = node;\n    }\n\n    return node;\n  }\n\n  public insertBefore(node: Node, refNode: Node | null) {\n    if (refNode == null) {\n      return this.appendChild(node);\n    }\n\n    if (node.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\n      insertFragment(node, this, refNode ? refNode.previousSibling : null, refNode);\n      return;\n    }\n\n    if (node.parentNode) { node.parentNode.removeChild(node); }\n\n    node.parentNode = this;\n\n    const previousSibling = refNode.previousSibling;\n    if (previousSibling) {\n      previousSibling.nextSibling = node;\n      node.previousSibling = previousSibling;\n    } else {\n      node.previousSibling = null;\n    }\n\n    refNode.previousSibling = node;\n    node.nextSibling = refNode;\n\n    if (this.firstChild === refNode) {\n      this.firstChild = node;\n    }\n  }\n\n  public removeChild(refNode: Node) {\n    if (this.firstChild === refNode) {\n      this.firstChild = refNode.nextSibling;\n    }\n    if (this.lastChild === refNode) {\n      this.lastChild = refNode.previousSibling;\n    }\n    if (refNode.previousSibling) {\n      refNode.previousSibling.nextSibling = refNode.nextSibling;\n    }\n    if (refNode.nextSibling) {\n      refNode.nextSibling.previousSibling = refNode.previousSibling;\n    }\n    refNode.parentNode = null;\n    refNode.nextSibling = null;\n    refNode.previousSibling = null;\n  }\n\n  protected _cloneNode() {\n    return new Node(this.nodeType, this.nodeName, this.nodeValue);\n  }\n}\n\nfunction insertFragment(fragment: Node, newParent: Node, before: Node | null, after: Node | null) {\n  if (!fragment.firstChild) { return; }\n\n  const firstChild = fragment.firstChild;\n  let lastChild = firstChild;\n  let node: Node | null = firstChild;\n\n  firstChild.previousSibling = before;\n  if (before) {\n    before.nextSibling = firstChild;\n  } else {\n    newParent.firstChild = firstChild;\n  }\n\n  while (node) {\n    node.parentNode = newParent;\n    lastChild = node;\n    node = node.nextSibling;\n  }\n\n  lastChild.nextSibling = after;\n  if (after) {\n    after.previousSibling = lastChild;\n  } else {\n    newParent.lastChild = lastChild;\n  }\n}\n\nclass ChildNodes {\n  constructor(private node: Node) {\n  }\n\n  public item(index: number) {\n    let child = this.node.firstChild;\n\n    for (let i = 0; child && index !== i; i++) {\n      child = child.nextSibling;\n    }\n\n    return child;\n  }\n}\n","import Node, { NodeType } from './node';\n\nexport default class Element extends Node {\n  public nodeType: NodeType.ELEMENT_NODE;\n  public tagName: string;\n  public attributes: IAttr[] = [];\n\n  constructor(tagName: string) {\n    super(NodeType.ELEMENT_NODE, tagName.toUpperCase(), null);\n    this.tagName = this.nodeName;\n  }\n\n  public getAttribute(name: string) {\n    const attributes = this.attributes;\n    const n = name.toLowerCase();\n    let attr;\n    for (let i = 0, l = attributes.length; i < l; i++) {\n      attr = attributes[i];\n      if (attr.name === n) {\n        return attr.value;\n      }\n    }\n    return '';\n  }\n\n  public setAttribute(name: string, value: any) {\n    const attributes = this.attributes;\n    const n = name.toLowerCase();\n    let v: string;\n    if (typeof value === 'string') {\n      v = value;\n    } else {\n      v = '' + value;\n    }\n    let attr;\n    for (let i = 0, l = attributes.length; i < l; i++) {\n      attr = attributes[i];\n      if (attr.name === n) {\n        attr.value = v;\n        return;\n      }\n    }\n    attributes.push({\n      name: n,\n      specified: true, // serializer compat with old IE\n      value: v,\n    });\n  }\n\n  public removeAttribute(name: string) {\n    const n = name.toLowerCase();\n    const attributes = this.attributes;\n    for (let i = 0, l = attributes.length; i < l; i++) {\n      const attr = attributes[i];\n      if (attr.name === n) {\n        attributes.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  protected _cloneNode() {\n    const node = new Element(this.tagName);\n\n    const attrs = node.attributes = [] as IAttr[];\n\n    for (const attr of this.attributes) {\n      attrs.push({ name: attr.name, specified: attr.specified, value: attr.value });\n    }\n\n    return node;\n  }\n}\n\nexport interface IAttr {\n  name: string;\n  value: string;\n  specified: boolean;\n}\n","import Node, { NodeType } from './node';\n\nexport default class DocumentFragment extends Node {\n  constructor() {\n    super(NodeType.DOCUMENT_FRAGMENT_NODE, '#document-fragment', null);\n  }\n\n  protected _cloneNode() {\n    return new DocumentFragment();\n  }\n}\n","import Node, { NodeType } from './node';\n\nexport default class Comment extends Node {\n  public nodeValue: string;\n\n  constructor(text: string) {\n    super(NodeType.COMMENT_NODE, '#comment', text);\n  }\n\n  protected _cloneNode() {\n    return new Comment(this.nodeValue);\n  }\n}\n","import Node, { NodeType } from './node';\n\nexport default class RawHTMLSection extends Node {\n  constructor(text: string) {\n    super(NodeType.RAW, \"#raw-html-section\", text);\n  }\n}\n","import Node, { NodeType } from './node';\n\nexport default class Text extends Node {\n  public nodeValue: string;\n\n  constructor(text: string) {\n    super(NodeType.TEXT_NODE, '#text', text);\n  }\n\n  protected _cloneNode() {\n    return new Text(this.nodeValue);\n  }\n}\n","import Comment from './document/comment';\nimport DocumentFragment from './document/document-fragment';\nimport Element from './document/element';\nimport Node from './document/node';\nimport RawHTMLSection from './document/raw-html-section';\nimport Text from './document/text';\n\nexport default class Document extends Node {\n  public documentElement: Element;\n  public head: Element;\n  public body: Element;\n\n  constructor() {\n    super(9, '#document', null);\n    this.documentElement = new Element('html');\n    this.head = new Element('head');\n    this.body = new Element('body');\n    this.documentElement.appendChild(this.head);\n    this.documentElement.appendChild(this.body);\n    this.appendChild(this.documentElement);\n  }\n\n  public createElement(tagName: string) {\n    return new Element(tagName);\n  }\n\n  public createTextNode(text: string) {\n    return new Text(text);\n  }\n\n  public createComment(text: string) {\n    return new Comment(text);\n  }\n\n  public createRawHTMLSection(text: string) {\n    return new RawHTMLSection(text);\n  }\n\n  public createDocumentFragment() {\n    return new DocumentFragment();\n  }\n}\n","import Document from './document';\nimport DocumentFragment from './document/document-fragment';\nimport Element from './document/element';\nimport Node from './document/node';\n\nexport default class HTMLParser {\n  private parentStack: Node[];\n\n  constructor(private tokenize: Tokenizer, private document: Document, private voidMap: IVoidMap) {\n    this.tokenize = tokenize;\n    this.document = document;\n    this.voidMap = voidMap;\n    this.parentStack = [];\n  }\n\n  public isVoid(element: Element) {\n    return this.voidMap[element.nodeName] === true;\n  }\n\n  public pushElement(token: IStartTag) {\n    const el = this.document.createElement(token.tagName);\n\n    for (const attr of token.attributes) {\n      el.setAttribute(attr[0], attr[1]);\n    }\n\n    if (this.isVoid(el)) {\n      return this.appendChild(el);\n    }\n\n    this.parentStack.push(el);\n  }\n\n  public popElement(token: IEndTag) {\n    const el = this.parentStack.pop()!;\n\n    if (el.nodeName !== token.tagName.toUpperCase()) {\n      throw new Error('unbalanced tag');\n    }\n\n    this.appendChild(el);\n  }\n\n  public appendText(token: IChars) {\n    this.appendChild(this.document.createTextNode(token.chars));\n  }\n\n  public appendComment(token: IComment) {\n    this.appendChild(this.document.createComment(token.chars));\n  }\n\n  public appendChild(node: Node) {\n    const parentNode = this.parentStack[this.parentStack.length - 1];\n    parentNode.appendChild(node);\n  }\n\n  public parse(html: string) {\n    const fragment = this.document.createDocumentFragment();\n    this.parentStack.push(fragment);\n\n    const tokens = this.tokenize(html);\n    for (let i = 0, l = tokens.length; i < l; i++) {\n      const token = tokens[i];\n      switch (token.type) {\n        case 'StartTag':\n          this.pushElement(token);\n          break;\n        case 'EndTag':\n          this.popElement(token);\n          break;\n        case 'Chars':\n          this.appendText(token);\n          break;\n        case 'Comment':\n          this.appendComment(token);\n          break;\n      }\n    }\n\n    return this.parentStack.pop();\n  }\n}\n\nexport interface IVoidMap {\n  [tagName: string]: boolean | undefined;\n}\n\nexport type Tokenizer = (s: string) => Token[];\n\nexport type Token = IStartTag | IEndTag | IChars | IComment;\n\nexport type Attr = [string, string];\n\nexport interface IStartTag {\n  type: 'StartTag';\n  tagName: string;\n  attributes: Attr[];\n}\n\nexport interface IEndTag {\n  type: 'EndTag';\n  tagName: string;\n}\n\nexport interface IChars {\n  type: 'Chars';\n  chars: string;\n}\n\nexport interface IComment {\n  type: 'Comment';\n  chars: string;\n}\n","const ESC = {\n  '\"': '&quot;',\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n};\n\nfunction matcher(char: keyof typeof ESC) {\n  if (ESC[char] === undefined) {\n    return char;\n  }\n  return ESC[char];\n}\n\nexport default class HTMLSerializer {\n  constructor(private voidMap: {\n    [tagName: string]: boolean,\n  }) {\n  }\n\n  public openTag(element: Node) {\n    return '<' + element.nodeName.toLowerCase() + this.attributes(element.attributes) + '>';\n  }\n\n  public closeTag(element: Node) {\n    return '</' + element.nodeName.toLowerCase() + '>';\n  }\n\n  public isVoid(element: Node) {\n    return this.voidMap[element.nodeName] === true;\n  }\n\n  public attributes(namedNodeMap: NamedNodeMap) {\n    let buffer = '';\n    for (let i = 0, l = namedNodeMap.length; i < l; i++) {\n      buffer += this.attr(namedNodeMap[i]);\n    }\n    return buffer;\n  }\n\n  public escapeAttrValue(attrValue: string) {\n    if (attrValue.indexOf('&') > -1 || attrValue.indexOf('\"') > -1) {\n      return attrValue.replace(/[&\"]/g, matcher);\n    }\n\n    return attrValue;\n  }\n\n  public attr(attr: Attr) {\n    if (!attr.specified) {\n      return '';\n    }\n    if (attr.value) {\n      return ' ' + attr.name + '=\"' + this.escapeAttrValue(attr.value) + '\"';\n    }\n    return ' ' + attr.name;\n  }\n\n  public escapeText(textNodeValue: string) {\n    if (textNodeValue.indexOf('>') > -1 ||\n        textNodeValue.indexOf('<') > -1 ||\n        textNodeValue.indexOf('&') > -1\n    ) {\n      return textNodeValue.replace(/[&<>]/g, matcher);\n    }\n\n    return textNodeValue;\n  }\n\n  public text(text: Node) {\n    return this.escapeText(text.nodeValue!);\n  }\n\n  public rawHTMLSection(text: Node): string {\n    return text.nodeValue!;\n  }\n\n  public comment(comment: Node) {\n    return '<!--' + comment.nodeValue + '-->';\n  }\n\n  public serializeChildren(node: Node) {\n    let buffer = '';\n    let next = node.firstChild;\n    while (next !== null) {\n      buffer += this.serialize(next);\n      next = next.nextSibling;\n    }\n    return buffer;\n  }\n\n  public serialize(node: Node) {\n    let buffer = '';\n\n    // open\n    switch (node.nodeType) {\n      case 1:\n        buffer += this.openTag(node);\n        break;\n      case 3:\n        buffer += this.text(node);\n        break;\n      case -1:\n        buffer += this.rawHTMLSection(node);\n        break;\n      case 8:\n        buffer += this.comment(node);\n        break;\n      default:\n        break;\n    }\n\n    buffer += this.serializeChildren(node);\n\n    if (node.nodeType === 1 && !this.isVoid(node)) {\n      buffer += this.closeTag(node);\n    }\n\n    return buffer;\n  }\n}\n","export default {\n  AREA: true,\n  BASE: true,\n  BR: true,\n  COL: true,\n  COMMAND: true,\n  EMBED: true,\n  HR: true,\n  IMG: true,\n  INPUT: true,\n  KEYGEN: true,\n  LINK: true,\n  META: true,\n  PARAM: true,\n  SOURCE: true,\n  TRACK: true,\n  WBR: true,\n};\n"],"names":["const","let","super","this","attr","text","comment"],"mappings":";;;;;;yBAsCqB,QAAkB,EAAS,QAAgB,EAAS,SAAwB;iBAApE,GAAR,QAAQ,CAAU;iBAAiB,GAAR,QAAQ,CAAQ;kBAAkB,GAAT,SAAS,CAAe;mBAR9E,GAAgB,IAAI,CAAC;wBAChB,GAAgB,IAAI,CAAC;oBACzB,GAAgB,IAAI,CAAC;mBACtB,GAAgB,IAAI,CAAC;kBACtB,GAAgB,IAAI,CAAC;oBAElB,GAA2B,SAAS,CAAC;CAGvD;;gEAAA;mBAED,UAAqB;QAGf,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5B,QAAQ,KAAK,SAAS,EAAE;gBAClB,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;KACpD;WACM,QAAQ,CAAC;CACjB,CAAA;eAEM,SAAS,uBAAC,IAAU;QACnB,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE3B,IAAI,EAAE;YACJ,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YACxB,SAAS,GAAG,KAAK,CAAC;eAEf,KAAK,KAAK,IAAI,EAAE;qBACZ,GAAG,KAAK,CAAC,WAAW,CAAC;gBAC1B,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBACnC,GAAG,SAAS,CAAC;SACnB;KACF;WAEM,IAAI,CAAC;CACb,CAAA;eAEM,WAAW,yBAAC,IAAU;QACvB,IAAI,CAAC,QAAQ,sCAAsC;sBACvC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;eAC1C,IAAI,CAAC;KACb;QAEG,IAAI,CAAC,UAAU,EAAE;YAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAAE;QAEvD,CAAC,UAAU,GAAG,IAAI,CAAC;QACjB,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3B,OAAO,KAAK,IAAI,EAAE;YAChB,CAAC,UAAU,GAAG,IAAI,CAAC;YACnB,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;SAAM;YACD,CAAC,eAAe,GAAG,OAAO,CAAC;eACxB,CAAC,WAAW,GAAG,IAAI,CAAC;YACvB,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;WAEM,IAAI,CAAC;CACb,CAAA;eAEM,YAAY,0BAAC,IAAU,EAAE,OAAoB;QAC9C,OAAO,IAAI,IAAI,EAAE;eACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAC/B;QAEG,IAAI,CAAC,QAAQ,sCAAsC;sBACvC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,GAAG,OAAO,CAAC,eAAe,GAAG,IAAI,EAAE,OAAO,CAAC,CAAC;eACvE;KACR;QAEG,IAAI,CAAC,UAAU,EAAE;YAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAAE;QAEvD,CAAC,UAAU,GAAG,IAAI,CAAC;QAEjB,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QAC5C,eAAe,EAAE;uBACJ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC/B,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;SAAM;YACD,CAAC,eAAe,GAAG,IAAI,CAAC;KAC7B;WAEM,CAAC,eAAe,GAAG,IAAI,CAAC;QAC3B,CAAC,WAAW,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;YAC3B,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;CACF,CAAA;eAEM,WAAW,yBAAC,OAAa;QAC1B,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;YAC3B,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC;KACvC;QACG,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;YAC1B,CAAC,SAAS,GAAG,OAAO,CAAC,eAAe,CAAC;KAC1C;QACG,OAAO,CAAC,eAAe,EAAE;eACpB,CAAC,eAAe,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;KAC3D;QACG,OAAO,CAAC,WAAW,EAAE;eAChB,CAAC,WAAW,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;KAC/D;WACM,CAAC,UAAU,GAAG,IAAI,CAAC;WACnB,CAAC,WAAW,GAAG,IAAI,CAAC;WACpB,CAAC,eAAe,GAAG,IAAI,CAAC;CAChC,CAAA;eAES,UAAU;WACX,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;CAC/D,CAAA;;;;AA3Ha,iBAAY,wBAAyB;AACrC,mBAAc,0BAA2B;AACzC,cAAS,qBAAsB;AAC/B,uBAAkB,8BAA+B;AACjD,0BAAqB,iCAAkC;AACvD,gBAAW,uBAAwB;AACnC,gCAA2B,uCAAwC;AACnE,iBAAY,wBAAyB;AACrC,kBAAa,yBAA0B;AACvC,uBAAkB,+BAA+B;AACjD,2BAAsB,mCAAmC;AACzD,kBAAa,0BAA0B;AAmHvD,wBAAwB,QAAc,EAAE,SAAe,EAAE,MAAmB,EAAE,KAAkB;IAC9F,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;QAAE,OAAO;KAAE;IAErCA,IAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IACvCC,IAAI,SAAS,GAAG,UAAU,CAAC;IAC3BA,IAAI,IAAI,GAAgB,UAAU,CAAC;IAEnC,UAAU,CAAC,eAAe,GAAG,MAAM,CAAC;IACpC,IAAI,MAAM,EAAE;QACV,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;SAAM;QACL,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;KACnC;IAED,OAAO,IAAI,EAAE;QACX,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,SAAS,GAAG,IAAI,CAAC;QACjB,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;IAC9B,IAAI,KAAK,EAAE;QACT,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC;KACnC;SAAM;QACL,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;KACjC;CACF;AAED,qCACsB,IAAU;aAAN,GAAJ,IAAI,CAAM;CAC7B,CAAA;qBAEM,IAAI,kBAAC,KAAa;QACnB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SAE5BA,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE;aACpC,GAAG,KAAK,CAAC,WAAW,CAAC;KAC3B;WAEM,KAAK,CAAC;CACd,CAAA;;ACrLH,WAA6B;qBAKf,OAAe;QACzBC,OAAK,KAAA,6BAAwB,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;QAHrD,eAAU,GAAY,EAAE,CAAC;QAI9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;KAC9B;;;;4CAAA;IAEM,kBAAA,YAAY,0BAAC,IAAY;QAC9BF,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7BC,IAAI,IAAI,CAAC;QACT,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;SACF;QACD,OAAO,EAAE,CAAC;KACX,CAAA;IAEM,kBAAA,YAAY,0BAAC,IAAY,EAAE,KAAU;QAC1CD,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7BC,IAAI,CAAS,CAAC;QACd,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,CAAC,GAAG,KAAK,CAAC;SACX;aAAM;YACL,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;SAChB;QACDA,IAAI,IAAI,CAAC;QACT,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,OAAO;aACR;SACF;QACD,UAAU,CAAC,IAAI,CAAC;YACd,IAAI,EAAE,CAAC;YACP,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,CAAC;SACT,CAAC,CAAC;KACJ,CAAA;IAEM,kBAAA,eAAe,6BAAC,IAAY;QACjCD,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7BA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjDD,IAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO;aACR;SACF;KACF,CAAA;IAES,kBAAA,UAAU;;;QAClBA,IAAM,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvCA,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,EAAa,CAAC;QAE9C,KAAe,kBAAIG,MAAI,CAAC,UAAU,yBAAA,EAAE;YAA/BH,IAAM,IAAI;;YACb,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAC/E;QAED,OAAO,IAAI,CAAC;KACb,CAAA;;;EArEkC,IAsEpC;;ACtED,oBAAsC;;QAElCE,OAAK,KAAA,wCAAkC,oBAAoB,EAAE,IAAI,CAAC,CAAC;KACpE;;;;8DAAA;IAES,2BAAA,UAAU;QAClB,OAAO,IAAI,gBAAgB,EAAE,CAAC;KAC/B,CAAA;;;EAP2C,IAQ7C;;ACRD,WAA6B;qBAGf,IAAY;QACtBA,OAAK,KAAA,6BAAwB,UAAU,EAAE,IAAI,CAAC,CAAC;KAChD;;;;4CAAA;IAES,kBAAA,UAAU;QAClB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC,CAAA;;;EATkC,IAUpC;;ACVD,kBAAoC;4BACtB,IAAY;QACtBA,OAAK,KAAA,qBAAe,mBAAmB,EAAE,IAAI,CAAC,CAAC;KAChD;;;;0DAAA;;;EAHyC,IAI3C;;ACJD,QAA0B;kBAGZ,IAAY;QACtBA,OAAK,KAAA,0BAAqB,OAAO,EAAE,IAAI,CAAC,CAAC;KAC1C;;;;sCAAA;IAES,eAAA,UAAU;QAClB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACjC,CAAA;;;EAT+B,IAUjC;;ACLD,YAA8B;;QAM1BA,OAAK,KAAA,CAAC,MAAA,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACxC;;;;8CAAA;IAEM,mBAAA,aAAa,2BAAC,OAAe;QAClC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KAC7B,CAAA;IAEM,mBAAA,cAAc,4BAAC,IAAY;QAChC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB,CAAA;IAEM,mBAAA,aAAa,2BAAC,IAAY;QAC/B,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;KAC1B,CAAA;IAEM,mBAAA,oBAAoB,kCAAC,IAAY;QACtC,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;KACjC,CAAA;IAEM,mBAAA,sBAAsB;QAC3B,OAAO,IAAI,gBAAgB,EAAE,CAAC;KAC/B,CAAA;;;EAjCmC,IAkCrC;;qCCjCqB,QAAmB,EAAU,QAAkB,EAAU,OAAiB;iBAAlE,GAAR,QAAQ,CAAW;iBAAkB,GAAR,QAAQ,CAAU;gBAAiB,GAAP,OAAO,CAAU;QACxF,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACrB,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACrB,CAAC,OAAO,GAAG,OAAO,CAAC;QACnB,CAAC,WAAW,GAAG,EAAE,CAAC;CACvB,CAAA;qBAEM,MAAM,oBAAC,OAAgB;WACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;CAChD,CAAA;qBAEM,WAAW,yBAAC,KAAgB;QAC3B,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAEvC,kBAAI,KAAK,CAAC,UAAU,yBAAA,EAAE;YAA1B,IAAI;;YACb,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACnC;QAEG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;eACZ,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;KAC7B;QAEG,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CAC3B,CAAA;qBAEM,UAAU,wBAAC,KAAc;QACxB,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAG,CAAC;QAE/B,EAAE,CAAC,QAAQ,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;cACzC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;KACnC;QAEG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;CACtB,CAAA;qBAEM,UAAU,wBAAC,KAAa;QACzB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;CAC7D,CAAA;qBAEM,aAAa,2BAAC,KAAe;QAC9B,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;CAC5D,CAAA;qBAEM,WAAW,yBAAC,IAAU;QACrB,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;cACvD,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;CAC9B,CAAA;qBAEM,KAAK,mBAAC,IAAY;;;QACjB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;QACpD,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1B,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC9BD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAChB,KAAK,CAAC,IAAI;iBACX,UAAU;sBACT,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;sBAClB;iBACH,QAAQ;sBACP,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;sBACjB;iBACH,OAAO;sBACN,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;sBACjB;iBACH,SAAS;sBACR,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;sBACpB;SACT;KACF;WAEM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;CAC/B,CAAA;;AChFHD,IAAM,GAAG,GAAG;IACV,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;CACZ,CAAC;AAEF,iBAAiB,IAAsB;IACrC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;QAC3B,OAAO,IAAI,CAAC;KACb;IACD,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;CAClB;AAED,6CACsB,OAEnB;gBAF0B,GAAP,OAAO,CAE1B;CACA,CAAA;yBAEM,OAAO,qBAAC,OAAa;WACnB,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;CACzF,CAAA;yBAEM,QAAQ,sBAAC,OAAa;WACpB,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC;CACpD,CAAA;yBAEM,MAAM,oBAAC,OAAa;WAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;CAChD,CAAA;yBAEM,UAAU,wBAAC,YAA0B;;;QACtC,MAAM,GAAG,EAAE,CAAC;SACXC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cAC7C,IAAIE,MAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC;WACM,MAAM,CAAC;CACf,CAAA;yBAEM,eAAe,6BAAC,SAAiB;QAClC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;eACvD,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC5C;WAEM,SAAS,CAAC;CAClB,CAAA;yBAEM,IAAI,kBAACC,MAAU;QAChB,CAACA,MAAI,CAAC,SAAS,EAAE;eACZ,EAAE,CAAC;KACX;QACGA,MAAI,CAAC,KAAK,EAAE;eACP,GAAG,GAAGA,MAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,eAAe,CAACA,MAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;KACxE;WACM,GAAG,GAAGA,MAAI,CAAC,IAAI,CAAC;CACxB,CAAA;yBAEM,UAAU,wBAAC,aAAqB;QACjC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBAClB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBAClB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAClC,EAAE;eACO,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KACjD;WAEM,aAAa,CAAC;CACtB,CAAA;yBAEM,IAAI,kBAACC,MAAU;WACb,IAAI,CAAC,UAAU,CAACA,MAAI,CAAC,SAAU,CAAC,CAAC;CACzC,CAAA;yBAEM,cAAc,4BAAC,IAAU;WACvB,IAAI,CAAC,SAAU,CAAC;CACxB,CAAA;yBAEM,OAAO,qBAACC,SAAa;WACnB,MAAM,GAAGA,SAAO,CAAC,SAAS,GAAG,KAAK,CAAC;CAC3C,CAAA;yBAEM,iBAAiB,+BAAC,IAAU;;;QAC7B,MAAM,GAAG,EAAE,CAAC;QACZ,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;WACpB,IAAI,KAAK,IAAI,EAAE;cACd,IAAIH,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC3B,GAAG,IAAI,CAAC,WAAW,CAAC;KACzB;WACM,MAAM,CAAC;CACf,CAAA;yBAEM,SAAS,uBAAC,IAAU;QACrB,MAAM,GAAG,EAAE,CAAC;;YAGR,IAAI,CAAC,QAAQ;aACd,CAAC;kBACE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;kBACvB;aACH,CAAC;kBACE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;kBACpB;aACH,CAAC,CAAC;kBACC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;kBAC9B;aACH,CAAC;kBACE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;kBACvB;;kBAEA;KACT;UAEK,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;cACvC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC/B;WAEM,MAAM,CAAC;CACf,CAAA;;ACvHH,cAAe;IACb,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,IAAI;IACT,OAAO,EAAE,IAAI;IACb,KAAK,EAAE,IAAI;IACX,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,IAAI;IACT,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,IAAI;IACZ,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,IAAI;IACZ,KAAK,EAAE,IAAI;IACX,GAAG,EAAE,IAAI;CACV,CAAC;;;;;;;;;;;;;;;;;;"}